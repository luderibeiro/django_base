services:
    project:
        container_name: project_prod
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./data/web/static:/data/web/static:rw
            - ./data/web/media:/data/web/media:rw
        env_file:
            - ./dotenv_files/.env.prod
        depends_on:
            project_db:
                condition: service_healthy
        command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 4 --log-level info
        deploy:
            resources:
                limits:
                    cpus: "1"
                    memory: 1024M
        ports:
            - "80:8000"

    project_db:
        container_name: project_db_prod
        user: "postgres"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_DB: postgres
            POSTGRES_PASSWORD: postgres
        image: postgres:13-alpine
        volumes:
            - project_db_prod:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        env_file:
            - ./dotenv_files/.env.prod
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

volumes:
    project_db_prod:
